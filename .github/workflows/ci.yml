name: CI

on:
  pull_request:
    branches: ['*']
  push:
    branches: [main]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - run: npm i -g @antfu/ni
      - run: nci
      - run: nr lint
      - run: nr typecheck

  test:
    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        node: [lts/*]
        platform: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: SetUP Choco
        if: matrix.platform == 'windows-latest'
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: -h

      - uses: ikalnytskyi/action-setup-postgres@v7
        id: postgres

      - name: Set up Redis on Ubuntu and macOS
        if: matrix.platform != 'windows-latest'
        uses: shogo82148/actions-setup-redis@v1
        id: redis
        with:
          redis-version: '7'
          redis-port: '6379'

      - name: Set up Redis on Windows
        if: matrix.platform == 'windows-latest'
        run: choco install redis

      - run: npm i -g @antfu/ni
      - run: nci
      - run: nr build

      - name: DB Initialize
        env:
          PGSERVICE: ${{ steps.postgres.outputs.service-name }}
        run: |
          createuser starter
          createdb --owner starter koadb
          psql -c "ALTER USER starter WITH PASSWORD 'starter'"

      - name: DB Checking
        env:
          PGSERVICE: ${{ steps.postgres.outputs.service-name }}
        run: |
          psql ${{ steps.postgres.outputs.connection-uri }} -c "SELECT 1"
          psql service=${{ steps.postgres.outputs.service-name }} -c "SELECT 1"
          psql -c "SELECT 1"

      - name: Run Redis on Ubuntu and macOS
        if: matrix.platform != 'windows-latest'
        run: redis-cli -h 127.0.0.1 -p 6379 ping

      - name: Run Redis on Windows
        if: matrix.platform == 'windows-latest'
        run: |
          redis-server --daemonize yes # Run in background
          redis-cli ping

      - name: Unit testing
        run: |
          npx drizzle-kit generate
          npx drizzle-kit migrate
          nr test
        env:
          DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
          CACHE_URL: 'redis://127.0.0.1:6379'
